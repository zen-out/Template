{"version":3,"file":"psi.js","sourceRoot":"","sources":["../src/psi.ts"],"names":[],"mappings":"","sourcesContent":["import * as ts from \"typescript\"\nimport { Annotation } from \"doctrine\"\n\nexport interface Member {\n  readonly name: string\n}\n\nexport interface MethodDescriptor extends Member {\n  readonly tags: Array<string>\n\n  readonly isProtected?: boolean\n\n  readonly node: ts.SignatureDeclaration\n  readonly jsDoc: Annotation | null\n}\n\nexport interface Property extends Member {\n  readonly types: Array<string | Type>\n\n  readonly node: ts.PropertySignature | ts.PropertyDeclaration\n\n  readonly defaultValue: any\n  readonly isOptional: boolean\n}\n\nexport interface Class extends Member {\n  readonly modulePath: string\n\n  readonly node: ts.Node\n  readonly isInterface: boolean\n  readonly properties: Array<Property>\n  readonly methods: Array<MethodDescriptor>\n  readonly parents: Array<string | Type>\n}\n\nexport interface Variable extends Member {\n  readonly node: ts.VariableStatement\n  readonly isConst: boolean\n  readonly types: Array<string | Type>\n}\n\nexport interface SourceFileDescriptor {\n  readonly classes: Array<Class>\n  readonly functions: Array<MethodDescriptor>\n  readonly members: Array<Variable | Descriptor>\n}\n\nexport interface SourceFileModuleInfo {\n  readonly id: string\n  readonly isMain: boolean\n}\n\nexport interface Descriptor extends Member {\n  node?: ts.Node\n\n  id?: string\n  name: string\n  // noinspection SpellCheckingInspection\n  longname?: string\n  kind: \"enum\" | \"member\"\n  scope: \"global\" | \"static\"\n  description?: string\n  type: DescriptorType\n  properties?: Array<Descriptor>\n\n  memberof?: string\n\n  readonly?: boolean\n}\n\nexport interface DescriptorType {\n  names: Array<string>\n}\n\nexport interface Type {\n  name: string\n  subTypes: Array<string | Type>\n}"]}